CMAKE_MINIMUM_REQUIRED(VERSION 3.10)
PROJECT(phantomjs)

SET(CMAKE_CXX_STANDARD 11)

find_package(Qt5 COMPONENTS Core Network WebKitWidgets REQUIRED)
find_package(Threads REQUIRED)

message("Qt version ${Qt5Core_VERSION}")
if (Qt5Core_VERSION VERSION_LESS 5.15)
  message(FATAL_ERROR "This version of Qt is not supported. Please use Qt 5.15 or later")
endif()

SET(CMAKE_AUTOMOC ON)
SET(CMAKE_AUTORCC ON)

SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

file(GLOB_RECURSE PHANTOMJS_SOURCES src/*.cpp)
INCLUDE_DIRECTORIES(src)
SET(CMAKE_INCLUDE_CURRENT_DIR ON)

SET(THIRDPARTY_SOURCES src/mongoose/mongoose.c src/qcommandline/qcommandline.cpp src/linenoise/src/linenoise.c)
INCLUDE_DIRECTORIES(src/linenoise/src)
INCLUDE_DIRECTORIES(src/mongoose)
INCLUDE_DIRECTORIES(src/qcommandline)

LINK_LIBRARIES(Qt5::Core Qt5::Network Qt5::WebKitWidgets Threads::Threads dl)

ADD_LIBRARY(${PROJECT_NAME}_static STATIC ${PHANTOMJS_SOURCES} ${THIRDPARTY_SOURCES})

IF(UNIX)
	SET_TARGET_PROPERTIES(${PROJECT_NAME}_static PROPERTIES OUTPUT_NAME "${PROJECT_NAME}")
ENDIF(UNIX)

ADD_EXECUTABLE(${PROJECT_NAME} src/phantomjs.qrc ${PHANTOMJS_SOURCES} ${THIRDPARTY_SOURCES})
